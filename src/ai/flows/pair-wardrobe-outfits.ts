// src/ai/flows/pair-wardrobe-outfits.ts
'use server';
/**
 * @fileOverview Suggests outfit pairings from user's existing wardrobe, based on uploaded images and color combination rules.
 *
 * - pairWardrobeOutfits - A function that handles the outfit pairing process.
 * - PairWardrobeOutfitsInput - The input type for the pairWardrobeOutfits function.
 * - PairWardrobeOutfitsOutput - The return type for the pairWardrobeOutfits function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PairWardrobeOutfitsInputSchema = z.object({
  clothingItems: z.array(
    z.object({
      photoDataUri: z
        .string()
        .describe(
          "A photo of a clothing item, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
        ),
      description: z.string().describe('The description of the clothing item.'),
      type: z.string().describe('The clothing type (e.g., shirt, pants, shoes).'),
      color: z.string().describe('The main color of the clothing item.'),
    })
  ).describe('An array of clothing items with their descriptions, types, and colors.'),
});
export type PairWardrobeOutfitsInput = z.infer<typeof PairWardrobeOutfitsInputSchema>;

const PairWardrobeOutfitsOutputSchema = z.object({
  suggestedOutfits: z.array(
    z.object({
      description: z.string().describe('A description of the suggested outfit.'),
      items: z.array(
        z.object({
          type: z.string().describe('The clothing type of the item in the outfit.'),
          description: z.string().describe('The description of the clothing item.'),
        })
      ).describe('The clothing items that make up the outfit.')
    })
  ).describe('An array of suggested outfits based on the input wardrobe items.'),
});
export type PairWardrobeOutfitsOutput = z.infer<typeof PairWardrobeOutfitsOutputSchema>;

export async function pairWardrobeOutfits(input: PairWardrobeOutfitsInput): Promise<PairWardrobeOutfitsOutput> {
  return pairWardrobeOutfitsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'pairWardrobeOutfitsPrompt',
  input: {schema: PairWardrobeOutfitsInputSchema},
  output: {schema: PairWardrobeOutfitsOutputSchema},
  prompt: `You are a personal stylist that suggests outfits based on the provided wardrobe items.

You are provided with the following clothing items:

{{#each clothingItems}}
Type: {{{this.type}}}
Description: {{{this.description}}}
Color: {{{this.color}}}
Photo: {{media url=this.photoDataUri}}
{{/each}}

Suggest outfits based on color combination rules and the descriptions of the items.
Be creative with the outfit suggestions and consider different styles.
`,
});

const pairWardrobeOutfitsFlow = ai.defineFlow(
  {
    name: 'pairWardrobeOutfitsFlow',
    inputSchema: PairWardrobeOutfitsInputSchema,
    outputSchema: PairWardrobeOutfitsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































