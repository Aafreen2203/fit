// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview An AI agent that suggests clothing pairings based on user's body type, shape, and color palette.
 *
 * - suggestClothingPairings - A function that suggests clothing pairings.
 * - SuggestClothingPairingsInput - The input type for the suggestClothingPairings function.
 * - SuggestClothingPairingsOutput - The return type for the suggestClothingPairings function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestClothingPairingsInputSchema = z.object({
  bodyType: z.string().describe('The user’s body type (e.g., hourglass, pear, apple, rectangle).'),
  bodyShape: z.string().describe('The user’s body shape (e.g., inverted triangle, oval, diamond).'),
  colorPalette: z.string().describe('The user’s color palette (e.g., spring, summer, autumn, winter).'),
});
export type SuggestClothingPairingsInput = z.infer<typeof SuggestClothingPairingsInputSchema>;

const SuggestClothingPairingsOutputSchema = z.object({
  suggestedOutfit: z.array(z.string()).describe('An array of clothing items that create a stylish outfit.'),
  reasoning: z.string().describe('The AI’s reasoning for suggesting this particular outfit.'),
});
export type SuggestClothingPairingsOutput = z.infer<typeof SuggestClothingPairingsOutputSchema>;

export async function suggestClothingPairings(input: SuggestClothingPairingsInput): Promise<SuggestClothingPairingsOutput> {
  return suggestClothingPairingsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestClothingPairingsPrompt',
  input: {schema: SuggestClothingPairingsInputSchema},
  output: {schema: SuggestClothingPairingsOutputSchema},
  prompt: `You are a personal stylist AI. Given a user's body type, body shape, and color palette, you will suggest a stylish outfit pairing.

  Body Type: {{{bodyType}}}
  Body Shape: {{{bodyShape}}}
  Color Palette: {{{colorPalette}}}

  Suggest an outfit that complements these characteristics, and explain your reasoning for the choices you've made.
  Ensure that the suggested outfit is coherent, stylish, and takes into account current fashion trends.
  Your output should contain the array of clothing items that create a stylish outfit, and the reasoning for suggesting this particular outfit.
  `,
});

const suggestClothingPairingsFlow = ai.defineFlow(
  {
    name: 'suggestClothingPairingsFlow',
    inputSchema: SuggestClothingPairingsInputSchema,
    outputSchema: SuggestClothingPairingsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
